//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CSharpParser.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="CSharpParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface ICSharpParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.compilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompilationUnit([NotNull] CSharpParser.CompilationUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.compilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompilationUnit([NotNull] CSharpParser.CompilationUnitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.usingDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsingDeclaration([NotNull] CSharpParser.UsingDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.usingDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsingDeclaration([NotNull] CSharpParser.UsingDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.typeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeDeclaration([NotNull] CSharpParser.TypeDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.typeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeDeclaration([NotNull] CSharpParser.TypeDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModifier([NotNull] CSharpParser.ModifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModifier([NotNull] CSharpParser.ModifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.classOrInterfaceModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassOrInterfaceModifier([NotNull] CSharpParser.ClassOrInterfaceModifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.classOrInterfaceModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassOrInterfaceModifier([NotNull] CSharpParser.ClassOrInterfaceModifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.variableModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableModifier([NotNull] CSharpParser.VariableModifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.variableModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableModifier([NotNull] CSharpParser.VariableModifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.classDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDeclaration([NotNull] CSharpParser.ClassDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.classDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDeclaration([NotNull] CSharpParser.ClassDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.typeParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeParameters([NotNull] CSharpParser.TypeParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.typeParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeParameters([NotNull] CSharpParser.TypeParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.typeParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeParameter([NotNull] CSharpParser.TypeParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.typeParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeParameter([NotNull] CSharpParser.TypeParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.typeBound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeBound([NotNull] CSharpParser.TypeBoundContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.typeBound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeBound([NotNull] CSharpParser.TypeBoundContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.enumDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumDeclaration([NotNull] CSharpParser.EnumDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.enumDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumDeclaration([NotNull] CSharpParser.EnumDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.enumConstants"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumConstants([NotNull] CSharpParser.EnumConstantsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.enumConstants"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumConstants([NotNull] CSharpParser.EnumConstantsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.enumConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumConstant([NotNull] CSharpParser.EnumConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.enumConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumConstant([NotNull] CSharpParser.EnumConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.enumBodyDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumBodyDeclarations([NotNull] CSharpParser.EnumBodyDeclarationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.enumBodyDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumBodyDeclarations([NotNull] CSharpParser.EnumBodyDeclarationsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.interfaceDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceDeclaration([NotNull] CSharpParser.InterfaceDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.interfaceDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceDeclaration([NotNull] CSharpParser.InterfaceDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassBody([NotNull] CSharpParser.ClassBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassBody([NotNull] CSharpParser.ClassBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.interfaceBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceBody([NotNull] CSharpParser.InterfaceBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.interfaceBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceBody([NotNull] CSharpParser.InterfaceBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.classBodyDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassBodyDeclaration([NotNull] CSharpParser.ClassBodyDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.classBodyDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassBodyDeclaration([NotNull] CSharpParser.ClassBodyDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.memberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberDeclaration([NotNull] CSharpParser.MemberDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.memberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberDeclaration([NotNull] CSharpParser.MemberDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.methodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDeclaration([NotNull] CSharpParser.MethodDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.methodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDeclaration([NotNull] CSharpParser.MethodDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.methodBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodBody([NotNull] CSharpParser.MethodBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.methodBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodBody([NotNull] CSharpParser.MethodBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.typeTypeOrVoid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeTypeOrVoid([NotNull] CSharpParser.TypeTypeOrVoidContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.typeTypeOrVoid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeTypeOrVoid([NotNull] CSharpParser.TypeTypeOrVoidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.genericMethodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericMethodDeclaration([NotNull] CSharpParser.GenericMethodDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.genericMethodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericMethodDeclaration([NotNull] CSharpParser.GenericMethodDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.genericConstructorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericConstructorDeclaration([NotNull] CSharpParser.GenericConstructorDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.genericConstructorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericConstructorDeclaration([NotNull] CSharpParser.GenericConstructorDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.constructorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstructorDeclaration([NotNull] CSharpParser.ConstructorDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.constructorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstructorDeclaration([NotNull] CSharpParser.ConstructorDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.fieldDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldDeclaration([NotNull] CSharpParser.FieldDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.fieldDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldDeclaration([NotNull] CSharpParser.FieldDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.interfaceBodyDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceBodyDeclaration([NotNull] CSharpParser.InterfaceBodyDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.interfaceBodyDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceBodyDeclaration([NotNull] CSharpParser.InterfaceBodyDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.interfaceMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceMemberDeclaration([NotNull] CSharpParser.InterfaceMemberDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.interfaceMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceMemberDeclaration([NotNull] CSharpParser.InterfaceMemberDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.constDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstDeclaration([NotNull] CSharpParser.ConstDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.constDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstDeclaration([NotNull] CSharpParser.ConstDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.constantDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantDeclarator([NotNull] CSharpParser.ConstantDeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.constantDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantDeclarator([NotNull] CSharpParser.ConstantDeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.interfaceMethodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceMethodDeclaration([NotNull] CSharpParser.InterfaceMethodDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.interfaceMethodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceMethodDeclaration([NotNull] CSharpParser.InterfaceMethodDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.interfaceMethodModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceMethodModifier([NotNull] CSharpParser.InterfaceMethodModifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.interfaceMethodModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceMethodModifier([NotNull] CSharpParser.InterfaceMethodModifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.genericInterfaceMethodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericInterfaceMethodDeclaration([NotNull] CSharpParser.GenericInterfaceMethodDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.genericInterfaceMethodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericInterfaceMethodDeclaration([NotNull] CSharpParser.GenericInterfaceMethodDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.variableDeclarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclarators([NotNull] CSharpParser.VariableDeclaratorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.variableDeclarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclarators([NotNull] CSharpParser.VariableDeclaratorsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.variableDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclarator([NotNull] CSharpParser.VariableDeclaratorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.variableDeclarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclarator([NotNull] CSharpParser.VariableDeclaratorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.variableDeclaratorId"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclaratorId([NotNull] CSharpParser.VariableDeclaratorIdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.variableDeclaratorId"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclaratorId([NotNull] CSharpParser.VariableDeclaratorIdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.variableInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableInitializer([NotNull] CSharpParser.VariableInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.variableInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableInitializer([NotNull] CSharpParser.VariableInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.arrayInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayInitializer([NotNull] CSharpParser.ArrayInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.arrayInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayInitializer([NotNull] CSharpParser.ArrayInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.classOrInterfaceType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassOrInterfaceType([NotNull] CSharpParser.ClassOrInterfaceTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.classOrInterfaceType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassOrInterfaceType([NotNull] CSharpParser.ClassOrInterfaceTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.typeArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeArgument([NotNull] CSharpParser.TypeArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.typeArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeArgument([NotNull] CSharpParser.TypeArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.qualifiedNameList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualifiedNameList([NotNull] CSharpParser.QualifiedNameListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.qualifiedNameList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualifiedNameList([NotNull] CSharpParser.QualifiedNameListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.formalParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormalParameters([NotNull] CSharpParser.FormalParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.formalParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormalParameters([NotNull] CSharpParser.FormalParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.formalParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormalParameterList([NotNull] CSharpParser.FormalParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.formalParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormalParameterList([NotNull] CSharpParser.FormalParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.formalParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormalParameter([NotNull] CSharpParser.FormalParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.formalParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormalParameter([NotNull] CSharpParser.FormalParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.lastFormalParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLastFormalParameter([NotNull] CSharpParser.LastFormalParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.lastFormalParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLastFormalParameter([NotNull] CSharpParser.LastFormalParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.qualifiedName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualifiedName([NotNull] CSharpParser.QualifiedNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.qualifiedName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualifiedName([NotNull] CSharpParser.QualifiedNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] CSharpParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] CSharpParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.integerLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegerLiteral([NotNull] CSharpParser.IntegerLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.integerLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegerLiteral([NotNull] CSharpParser.IntegerLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.floatLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloatLiteral([NotNull] CSharpParser.FloatLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.floatLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloatLiteral([NotNull] CSharpParser.FloatLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotation([NotNull] CSharpParser.AnnotationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotation([NotNull] CSharpParser.AnnotationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.elementValuePairs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementValuePairs([NotNull] CSharpParser.ElementValuePairsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.elementValuePairs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementValuePairs([NotNull] CSharpParser.ElementValuePairsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.elementValuePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementValuePair([NotNull] CSharpParser.ElementValuePairContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.elementValuePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementValuePair([NotNull] CSharpParser.ElementValuePairContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.elementValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementValue([NotNull] CSharpParser.ElementValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.elementValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementValue([NotNull] CSharpParser.ElementValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.elementValueArrayInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementValueArrayInitializer([NotNull] CSharpParser.ElementValueArrayInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.elementValueArrayInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementValueArrayInitializer([NotNull] CSharpParser.ElementValueArrayInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.annotationTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationTypeDeclaration([NotNull] CSharpParser.AnnotationTypeDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.annotationTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationTypeDeclaration([NotNull] CSharpParser.AnnotationTypeDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.annotationTypeBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationTypeBody([NotNull] CSharpParser.AnnotationTypeBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.annotationTypeBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationTypeBody([NotNull] CSharpParser.AnnotationTypeBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.annotationTypeElementDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationTypeElementDeclaration([NotNull] CSharpParser.AnnotationTypeElementDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.annotationTypeElementDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationTypeElementDeclaration([NotNull] CSharpParser.AnnotationTypeElementDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.annotationTypeElementRest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationTypeElementRest([NotNull] CSharpParser.AnnotationTypeElementRestContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.annotationTypeElementRest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationTypeElementRest([NotNull] CSharpParser.AnnotationTypeElementRestContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.annotationMethodOrConstantRest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationMethodOrConstantRest([NotNull] CSharpParser.AnnotationMethodOrConstantRestContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.annotationMethodOrConstantRest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationMethodOrConstantRest([NotNull] CSharpParser.AnnotationMethodOrConstantRestContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.annotationMethodRest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationMethodRest([NotNull] CSharpParser.AnnotationMethodRestContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.annotationMethodRest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationMethodRest([NotNull] CSharpParser.AnnotationMethodRestContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.annotationConstantRest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationConstantRest([NotNull] CSharpParser.AnnotationConstantRestContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.annotationConstantRest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationConstantRest([NotNull] CSharpParser.AnnotationConstantRestContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.defaultValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefaultValue([NotNull] CSharpParser.DefaultValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.defaultValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefaultValue([NotNull] CSharpParser.DefaultValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] CSharpParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] CSharpParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.blockStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockStatement([NotNull] CSharpParser.BlockStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.blockStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockStatement([NotNull] CSharpParser.BlockStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.localVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocalVariableDeclaration([NotNull] CSharpParser.LocalVariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.localVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocalVariableDeclaration([NotNull] CSharpParser.LocalVariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.localTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocalTypeDeclaration([NotNull] CSharpParser.LocalTypeDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.localTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocalTypeDeclaration([NotNull] CSharpParser.LocalTypeDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] CSharpParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] CSharpParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.catchClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCatchClause([NotNull] CSharpParser.CatchClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.catchClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCatchClause([NotNull] CSharpParser.CatchClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.catchType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCatchType([NotNull] CSharpParser.CatchTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.catchType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCatchType([NotNull] CSharpParser.CatchTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.finallyBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFinallyBlock([NotNull] CSharpParser.FinallyBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.finallyBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFinallyBlock([NotNull] CSharpParser.FinallyBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.resourceSpecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResourceSpecification([NotNull] CSharpParser.ResourceSpecificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.resourceSpecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResourceSpecification([NotNull] CSharpParser.ResourceSpecificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.resources"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResources([NotNull] CSharpParser.ResourcesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.resources"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResources([NotNull] CSharpParser.ResourcesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.resource"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResource([NotNull] CSharpParser.ResourceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.resource"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResource([NotNull] CSharpParser.ResourceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.switchBlockStatementGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchBlockStatementGroup([NotNull] CSharpParser.SwitchBlockStatementGroupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.switchBlockStatementGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchBlockStatementGroup([NotNull] CSharpParser.SwitchBlockStatementGroupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.switchLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchLabel([NotNull] CSharpParser.SwitchLabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.switchLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchLabel([NotNull] CSharpParser.SwitchLabelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.forControl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForControl([NotNull] CSharpParser.ForControlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.forControl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForControl([NotNull] CSharpParser.ForControlContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.forInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForInit([NotNull] CSharpParser.ForInitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.forInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForInit([NotNull] CSharpParser.ForInitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.enhancedForControl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnhancedForControl([NotNull] CSharpParser.EnhancedForControlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.enhancedForControl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnhancedForControl([NotNull] CSharpParser.EnhancedForControlContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.parExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParExpression([NotNull] CSharpParser.ParExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.parExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParExpression([NotNull] CSharpParser.ParExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionList([NotNull] CSharpParser.ExpressionListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionList([NotNull] CSharpParser.ExpressionListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.methodCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodCall([NotNull] CSharpParser.MethodCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.methodCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodCall([NotNull] CSharpParser.MethodCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] CSharpParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] CSharpParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.lambdaExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLambdaExpression([NotNull] CSharpParser.LambdaExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.lambdaExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLambdaExpression([NotNull] CSharpParser.LambdaExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.lambdaParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLambdaParameters([NotNull] CSharpParser.LambdaParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.lambdaParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLambdaParameters([NotNull] CSharpParser.LambdaParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.lambdaBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLambdaBody([NotNull] CSharpParser.LambdaBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.lambdaBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLambdaBody([NotNull] CSharpParser.LambdaBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary([NotNull] CSharpParser.PrimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary([NotNull] CSharpParser.PrimaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.classType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassType([NotNull] CSharpParser.ClassTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.classType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassType([NotNull] CSharpParser.ClassTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.creator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreator([NotNull] CSharpParser.CreatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.creator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreator([NotNull] CSharpParser.CreatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.createdName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreatedName([NotNull] CSharpParser.CreatedNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.createdName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreatedName([NotNull] CSharpParser.CreatedNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.innerCreator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInnerCreator([NotNull] CSharpParser.InnerCreatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.innerCreator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInnerCreator([NotNull] CSharpParser.InnerCreatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.arrayCreatorRest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayCreatorRest([NotNull] CSharpParser.ArrayCreatorRestContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.arrayCreatorRest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayCreatorRest([NotNull] CSharpParser.ArrayCreatorRestContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.classCreatorRest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassCreatorRest([NotNull] CSharpParser.ClassCreatorRestContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.classCreatorRest"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassCreatorRest([NotNull] CSharpParser.ClassCreatorRestContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.explicitGenericInvocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicitGenericInvocation([NotNull] CSharpParser.ExplicitGenericInvocationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.explicitGenericInvocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicitGenericInvocation([NotNull] CSharpParser.ExplicitGenericInvocationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.typeArgumentsOrDiamond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeArgumentsOrDiamond([NotNull] CSharpParser.TypeArgumentsOrDiamondContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.typeArgumentsOrDiamond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeArgumentsOrDiamond([NotNull] CSharpParser.TypeArgumentsOrDiamondContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.nonWildcardTypeArgumentsOrDiamond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNonWildcardTypeArgumentsOrDiamond([NotNull] CSharpParser.NonWildcardTypeArgumentsOrDiamondContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.nonWildcardTypeArgumentsOrDiamond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNonWildcardTypeArgumentsOrDiamond([NotNull] CSharpParser.NonWildcardTypeArgumentsOrDiamondContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.nonWildcardTypeArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNonWildcardTypeArguments([NotNull] CSharpParser.NonWildcardTypeArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.nonWildcardTypeArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNonWildcardTypeArguments([NotNull] CSharpParser.NonWildcardTypeArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.typeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeList([NotNull] CSharpParser.TypeListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.typeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeList([NotNull] CSharpParser.TypeListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.typeType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeType([NotNull] CSharpParser.TypeTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.typeType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeType([NotNull] CSharpParser.TypeTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveType([NotNull] CSharpParser.PrimitiveTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveType([NotNull] CSharpParser.PrimitiveTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.typeArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeArguments([NotNull] CSharpParser.TypeArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.typeArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeArguments([NotNull] CSharpParser.TypeArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.superSuffix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSuperSuffix([NotNull] CSharpParser.SuperSuffixContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.superSuffix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSuperSuffix([NotNull] CSharpParser.SuperSuffixContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.explicitGenericInvocationSuffix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicitGenericInvocationSuffix([NotNull] CSharpParser.ExplicitGenericInvocationSuffixContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.explicitGenericInvocationSuffix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicitGenericInvocationSuffix([NotNull] CSharpParser.ExplicitGenericInvocationSuffixContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArguments([NotNull] CSharpParser.ArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArguments([NotNull] CSharpParser.ArgumentsContext context);
}
